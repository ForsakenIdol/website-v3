---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: pg
  name: database-initialization-script
data:
  config.sql: |
    DROP TABLE IF EXISTS github;
    CREATE TABLE github (
        repo_id INT PRIMARY KEY,
        repo_name VARCHAR (256) NOT NULL,
        created_at TIMESTAMP NOT NULL,
        description TEXT,
        url TEXT NOT NULL,
        private BOOLEAN NOT NULL
    );

    -- Sample data

    INSERT INTO github VALUES (
        463741050,
        'db_cont_test',
        '2022-02-26 03:17:36+00',
        'A simple 2-service setup to practise management of multiple containers in a project.',
        'https://api.github.com/repos/lachldwaws/db_cont_test',
        false
    );

    INSERT INTO github VALUES (
        463741051,
        'trash_thing',
        '2022-02-21 07:15:22+00',
        'LMAO this project sucks do not even try looking at it hahaha',
        'https://api.github.com/repos/lachldwaws/trash_thing',
        true
    );
---
# Persistent Volume Claim for the Postgres container.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: pg
  name: pg-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: pg
  name: dep-postgres
spec:
  selector:
    matchLabels:
      app: pod-postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: pod-postgres
    spec:
      containers:
      - name: container-postgres
        image: postgres:14.3
        imagePullPolicy: Always
        env:
        # We pull the password from the 2_credentials secret created previously.
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: "website"
          # We need to specify a different directory for the postgresql files than the default if we want to mount a volume
          # to the /var/lib/postgresql/data directory.
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: postgres-port
        volumeMounts:
          # This name is the name of the volume below. This is not arbitrary.
        - name: database-storage
          # The mount path is where the postgres database is stored by default.
          mountPath: /var/lib/postgresql/data
          # This db script will be run in the POSTGRES_DB database we specified above.
        - name: database-initialization-script
          mountPath: /docker-entrypoint-initdb.d/config.sql
          subPath: config.sql
      volumes:
      - name: database-storage
        persistentVolumeClaim:
          claimName: pg-claim
      - name: database-initialization-script
        configMap:
            name: database-initialization-script
            items:
              - key: config.sql
                path: config.sql
---
# This service object allows us to reference the Postgres database "url" simply with the name "postgres-service".
apiVersion: v1
kind: Service
metadata:
  namespace: pg
  name: postgres-service
spec:
  selector:
    app: pod-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---